{"version":3,"sources":["logo.svg","Pesan.js","Loading.js","App.js","reportWebVitals.js","index.js"],"names":["formItemLayout","labelCol","xs","span","sm","md","lg","wrapperCol","Pesan","props","Form","useForm","useState","List","name","fields","add","remove","map","field","index","style","paddingTop","Row","Col","Item","label","rules","required","message","placeholder","maxLength","TextArea","width","length","Button","variant","className","onClick","key","type","error","content","marginTop","Loading","App","Input","form","isloading","setIsloading","paddingLeft","layout","onFinish","values","fetch","then","res","json","keyJson","console","log","kirim","data","secret","axios","post","headers","resetFields","success","catch","err","initialValues","nomor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1ac3b9b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Component,Text, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'antd/dist/antd.css';\r\nimport { Form,Input,Tooltip, message, Divider,InputNumber } from 'antd';\r\nimport axios from 'axios';\r\nimport { Container,Row, Col, Button } from 'react-bootstrap';\r\n\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 10 },\r\n        sm: { span: 10 },\r\n        md: { span: 10 },\r\n        lg: { span: 6 }\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 100 },\r\n        sm: { span: 100 },\r\n        md: { span: 100 },\r\n        lg: { span: 18 },\r\n    }\r\n  };\r\n\r\nconst Pesan = (props) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const [number, setNumber] = useState(62) \r\n    const regexp = /^[0-9\\b]+$/\r\n    const onHandleNumberChange = (e) => {\r\n        alert(e.target.value);\r\n        if (regexp.test(e.target.value)) {\r\n            setNumber({ [e.target.name]: number });\r\n            form.setFieldsValue({\r\n                nomor: 'Mario',\r\n            });\r\n        }\r\n      };\r\n  \r\n    let table = [];\r\n    return(\r\n    <Form.List name=\"kirim\">\r\n        {(fields, { add, remove }) => {\r\n         return (\r\n          <div >\r\n            {fields.map((field, index) => (            \r\n              <div key={field.key}>\r\n                <div style={{paddingTop:5}}>\r\n            <Row>\r\n              <Col sm={3}>\r\n              <Form.Item\r\n                      {...formItemLayout}\r\n                      name={[index, \"nomor\"]}\r\n                      label=\"Nomor Hp\"\r\n                      rules={\r\n                          [\r\n                              {\r\n                                  required: true, message: 'Nomor Hp Diperlukan'\r\n                              }\r\n                          ]\r\n                      }\r\n                  >\r\n                      <Input\r\n                       placeholder='Masukkan Nomor Hp' maxLength={16}/>\r\n                  </Form.Item>\r\n              </Col>\r\n              <Col sm={9}>\r\n              <Form.Item\r\n                      {...formItemLayout}\r\n                      name={[index, \"pesan\"]}\r\n                      label=\"Pesan\"\r\n                      rules={\r\n                          [\r\n                              {\r\n                                  required: true, message: 'Pesan Diperlukan, max 150 character'\r\n                              }\r\n                          ]\r\n                      }\r\n                  >\r\n                      <Input.TextArea style={{ width: 500 }} maxLength={150} />\r\n                 </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </div>                  \r\n                {fields.length > 1 ? (\r\n                  <Button\r\n                      variant=\"danger\"\r\n                    className=\"dynamic-delete-button\"\r\n                    onClick={() => remove(field.name)}\r\n                  >\r\n                    Hapus pesan diatas\r\n                  </Button>\r\n                ) : null}\r\n              </div>\r\n            ))}\r\n            <Divider />\r\n            <Form.Item>\r\n            {fields.length <10 ? (\r\n              <Button\r\n              type=\"dashed\"\r\n              onClick={() => add()}\r\n              style={{ width: \"60%\" }}\r\n            >\r\n              Tambah Pesan\r\n            </Button>\r\n                ) :  message.error({\r\n                  content: 'maksimal 10 Pesan',\r\n                  className: 'custom-class',\r\n                  style: {\r\n                    marginTop: '20vh',\r\n                  },\r\n                })}\r\n            </Form.Item>\r\n          </div>\r\n        );\r\n        }}\r\n    </Form.List>\r\n    )\r\n    \r\n\r\n    }\r\n\r\n    export default Pesan;","import React from \"react\";\r\nimport \"./Loading.css\";\r\n\r\nconst Loading = () => (\r\n  <div>\r\n    <div className=\"loader\">\r\n      <div className=\"ade\"></div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport { Component,Text, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport { Form,Input,Tooltip, message, Divider } from 'antd';\nimport axios from 'axios';\nimport Pesan from './Pesan';\nimport { Container,Row, Col, Button } from 'react-bootstrap';\n// import key from {process.env.PUBLIC_URL+\"/public/key.json\"};\nimport Loading from \"./Loading\";\n\nconst { TextArea } = Input;\nconst FormItem = Form.Item;\nconst App =()=> { \n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n  const formItemLayout = {\n    labelCol: {\n        xs: { span: 10 },\n        sm: { span: 10 },\n        md: { span: 10 },\n        lg: { span: 6 }\n    },\n    wrapperCol: {\n        xs: { span: 100 },\n        sm: { span: 100 },\n        md: { span: 100 },\n        lg: { span: 18 },\n    }\n  };\n\n  const [form] = Form.useForm();\n  const [jumForm, setJumForm] = useState(1)\n  const [secret, setSecret] = useState()\n  const [errAxios, setErrAxios] = useState()\n  const [isloading, setIsloading] = useState(false)\n\n  const tambahForm =()=>{\n    if(jumForm <10){\n      setJumForm(jumForm+1)\n    }else{\n      // alert(\"maksimal 10\");\n      message.success({\n        content: 'maksimal 10',\n        className: 'custom-class',\n        style: {\n          marginTop: '20vh',\n        },\n      });\n    }\n  }\n  const kurangForm =()=>{\n    if(jumForm > 1){\n      setJumForm(jumForm-1)\n    }else{\n      // alert(\"minimal 1\");\n      message.success({\n        content: 'minimal 1',\n        className: 'custom-class',\n        style: {\n          marginTop: '20vh',\n        },\n      });\n    }\n  }\n\n  let a = []\n\n  const kirim =()=>{       \n    form.validateFields().then((values) => {\n      for (let i = 0; i <  jumForm; i++) {        \n          console.log('ade',this[values.pesan0])\n      }\n      let data = {\n          secret:'W4h1d',\n          kirim :values,\n      };\n      console.log('ade',data)\n      axios.post(`https://jsonplaceholder.typicode.com/users`, { data })\n          .then(res => {\n            console.log(res);\n            console.log(res.data);\n      })\n    }).catch((err)=>{\n        console.log(err);\n    })\n  }\n  const createTable1 = () => {  \n    let table = []\n    for (let i = 0; i <  jumForm; i++) {\n      table.push(\n        <div style={{paddingTop:5}}>\n          <Row>\n            <Col sm={4}>\n            <Form.Item\n                    {...formItemLayout}\n                    label='Nomor Hp: '\n                    name={'nomor'+i}\n                    rules={\n                        [\n                            {\n                                required: true, message: 'Nomor Hp Diperlukan'\n                            }\n                        ]\n                    }\n                >\n                    <Input onChange={(value) => {alert(value)}}  placeholder='Masukkan Nomor Hp' />\n                </Form.Item>\n            </Col>\n            <Col sm={8}>\n            <Form.Item\n                    {...formItemLayout}\n                    label='pesan: '\n                    name={'pesan'+i}\n                    rules={\n                        [\n                            {\n                                required: true, message: 'Pesan Diperlukan, max 150 character'\n                            }\n                        ]\n                    }\n                >\n                    <Input.TextArea style={{ width: 500 }} maxLength={150} />\n               </Form.Item>\n            </Col>\n          </Row>\n        </div>        \n      )\n    }\n    return table\n  }\n\n\n  function handleFinish(values) {\n    fetch(\"./key.json\").then(\n      function(res){\n      return res.json()\n    }).then(function(keyJson){\n    console.log('ade',values)\n    if(typeof values.kirim !== 'undefined'){\n      setIsloading(true);\n      // console.log(\"VALUES\", key);        \n      let data = {\n        secret:keyJson.secret,\n        data :values,\n      };\n      console.log('ade',data)\n      axios.post('http://192.168.1.245/smsreceiver/kirim.php', data, {headers: {\n        'Content-Type': 'application/json',\n      }})\n          .then(res => {\n          setIsloading(false);\n            form.resetFields();\n            message.success({\n              content: res.data.message,\n              className: 'custom-class',\n              style: {\n                marginTop: '20vh',\n              },\n            });\n          })\n          .catch(error => {\n            setIsloading(false);\n            message.error({\n              content: 'ada error di server sms',\n              className: 'custom-class',\n              style: {\n                marginTop: '20vh',\n              },\n            });\n          });\n    }else{\n      message.error({\n        content: 'Tambahakan pesan',\n        className: 'custom-class',\n        style: {\n          marginTop: '20vh',\n        },\n      });     \n  \n    }\n\n    }).catch(\n      function(err){\n        message.error({\n          content: 'Tool sms butuh Key',\n          className: 'custom-class',\n          style: {\n            marginTop: '20vh',\n          },\n        });     \n      }\n    )\n\n  }\n  \n    return (      \n      <div style={{paddingLeft:20,paddingTop:20}}>   \n          {isloading ? <Loading /> : null}     \n          <Row >\n            <Col>\n            Nomor Hp wajib pake 62<br></br>\n            contoh 6282299222900\n            {/* <Button style={{marginRight:5}} variant=\"primary\" onClick={()=>tambahForm()}>Tambah</Button>\n            <Button style={{marginRight:5}} variant=\"danger\" onClick={()=>kurangForm()}>Kurang</Button> */}\n            {/* <Button variant=\"success\" onClick={()=>kirim()}>kirim</Button> */}\n            </Col>            \n          </Row>   \n          <Form {...layout} form={form} layout={'horizontal'} onFinish={handleFinish} initialValues={{\n            nomor:62\n            }}>\n                <Pesan/>\n                <Form.Item>\n                  <Button variant=\"success\" type=\"submit\">\n                    kirim\n                  </Button>\n                </Form.Item>\n          </Form>\n      </div>\n    );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}